{"remainingRequest":"E:\\laragon\\www\\vuejstest\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\laragon\\www\\vuejstest\\demo\\docs\\Components\\TabsPage.vue?vue&type=template&id=540bad80&scoped=true&","dependencies":[{"path":"E:\\laragon\\www\\vuejstest\\demo\\docs\\Components\\TabsPage.vue","mtime":1574417884000},{"path":"E:\\laragon\\www\\vuejstest\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\laragon\\www\\vuejstest\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"E:\\laragon\\www\\vuejstest\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\laragon\\www\\vuejstest\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}