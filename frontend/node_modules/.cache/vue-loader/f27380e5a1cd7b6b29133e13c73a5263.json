{"remainingRequest":"E:\\laragon\\www\\vuejstest\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\laragon\\www\\vuejstest\\src\\components\\PayConfirm.vue?vue&type=style&index=0&id=00c11f28&scoped=true&lang=css&","dependencies":[{"path":"E:\\laragon\\www\\vuejstest\\src\\components\\PayConfirm.vue","mtime":1575861732782},{"path":"E:\\laragon\\www\\vuejstest\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\laragon\\www\\vuejstest\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\laragon\\www\\vuejstest\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\laragon\\www\\vuejstest\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\laragon\\www\\vuejstest\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KaDMgew0KICBmb250LXdlaWdodDogbm9ybWFsOw0KICBwYWRkaW5nLXRvcDogMjBweDsNCiAgcGFkZGluZy1ib3R0b206IDMwcHg7DQp9DQpwIHsNCiAgY29sb3I6ICM5Njk2OTY7DQogIG1hcmdpbi1ib3R0b206IDA7DQogIGZvbnQtc2l6ZTogMTRweDsNCn0NCg0K"},{"version":3,"sources":["PayConfirm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PayConfirm.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n      <section class=\"Pay_confirm\">\r\n        <section>\r\n              <div class=\"card mx-xl-5\">\r\n                <div class=\"card-body\">\r\n                    <p class=\"h4 text-center py-4\">Confirmation of the payment</p>\r\n                    <div v-if=\"name\">\r\n                    <h1>Total payment : RM {{ parseFloat(name.order[0].total_amount).toFixed(2) }}</h1>\r\n                    </div>\r\n                    <p>Do you want to confirm the payment?</p>\r\n                    <div v-if=\"name2\">\r\n                    <p>Total wallet balance : RM {{ parseFloat(name2.test.amount).toFixed(2) }}</p>\r\n                    </div>\r\n                    <br>\r\n                    <div>\r\n                      <mdb-btn size=\"lg\" @click=\"calculate\" color=\"primary\">Yes</mdb-btn>                                                       \r\n                      <mdb-btn size=\"lg\" @click=\"logout\" color=\"default\">No</mdb-btn>\r\n                    </div>\r\n                </div>\r\n              </div>\r\n        </section>\r\n      </section>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { mdbBtn } from 'mdbvue';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'Pay_confirm',\r\n        data () {\r\n            return {\r\n                email: 0,\r\n                name: null,\r\n                name2: null,\r\n            }\r\n        },\r\n        components: {\r\n            mdbBtn\r\n        },\r\n  mounted : function() {\r\n    this.getData();\r\n    this.getUser();\r\n  },\r\n  methods: {\r\n    logout() {\r\n            localStorage.removeItem('token')\r\n            this.$router.push('/form')\r\n    },\r\n\r\n    //this is where the calculation for if the user can successfully do the payment or otherwise\r\n    calculate() {\r\n\r\n          var that = this\r\n          axios.get('http://localhost:9000/api/order/'+ this.$route.params.hash).then(function(response) {\r\n          that.name = response.data\r\n          axios.get('http://localhost:9000/api/me?token='+ localStorage.getItem('token')).then(function(response2) {\r\n          that.name2 = response2.data\r\n          if  (Number(response.data.order[0].total_amount) >= Number(response2.data.test.amount)) {\r\n\r\n            window.alert(\"You don't have enough funds. Payment aborted\");\r\n            localStorage.removeItem('token')\r\n            location.reload(); \r\n          }\r\n          else {\r\n\r\n            window.alert(\"Payment successful\");\r\n            localStorage.removeItem('token')\r\n            location.reload(); \r\n\r\n          }\r\n          })          \r\n          })        \r\n    },\r\n    //this is where we fetch the data for the order payment\r\n    getData() {\r\n     var that = this\r\n     axios.get('http://localhost:9000/api/order/'+ this.$route.params.hash).then(function(response) {\r\n     that.name = response.data\r\n    })\r\n    },\r\n    //this is where we fetch the data for user\r\n    getUser() {\r\n     var that = this\r\n    axios.get('http://localhost:9000/api/me?token='+ localStorage.getItem('token')).then(function(response2) {\r\n     that.name2 = response2.data\r\n    })\r\n   },\r\n   updated () {\r\n     this.checkCurrentLogin()\r\n   },\r\n   checkCurrentLogin () {\r\n     if (!localStorage.token) {   \r\n       this.$router.push('/form')\r\n     }\r\n   },\r\n }\r\n}\r\n\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\nh3 {\r\n  font-weight: normal;\r\n  padding-top: 20px;\r\n  padding-bottom: 30px;\r\n}\r\np {\r\n  color: #969696;\r\n  margin-bottom: 0;\r\n  font-size: 14px;\r\n}\r\n\r\n</style>"]}]}